[이름을 통해 의도를 드러내라]
변수 이름, 함수(메소드) 이름, 클래스 이름을 짓는데 시간을 투자하라.
이름을 통해 변수의 역할, 함수의 역할, 클래스의 역할에 대한 의도를 드러내기 위해 노력하라.
연속적인 숫자를 덧붙인 이름(a1, a2, ... ,aN) 이나 불용어 (info, Data, a, an, the)를 추가하는 방식은 적절하지 못하다.

[축약하지 마라]
의도를 들어낼 수 있다면 이름이 길어져도 괜찮다.

[개발도구의 code format 기능을 활용해라]
IntelliJ + MacOS = Cmd + Alt + L

[space(공백)도 convention이다]
for, while, if문 사이의 space도 convention이다.

[불필요하게 공백 라인을 만들지 않는다]
공백 라인을 뛰우는 것도 코드상에 문맥이 달라지는 부분에 의도를 가지고 뛰우면 좋겠다.

[구현 순서도 convention이다]
클래스의 구현 순서에 대한 convention을 지키는 것도 읽기 좋은 코드를 구현하는데 의미가 있다.
클래스의 구현 순서를 지키면서 프로그래밍 한다.
Class A {
    상수(static final) 또는 클래스 변수

    인스턴스 변수

    생성자

    메소드
}

[반복하지 마라]
중복은 소프트웨어에서 모든 악의 근원이다.

[값을 하드코딩하지 마라]
문자열 숫자 등의 값을 하드코딩하지 마라.
상수를 만들고 이름을 부여해 이 변수의 역할이 무엇인지 의도를 드러내라.
구글에서 "java 상수"와 같은 키워드로 검색해 상수 구현 방법을 학습하고 적용해 본다.